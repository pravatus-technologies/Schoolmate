// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Schoolmate.Infrastructure.Data.Contexts;

#nullable disable

namespace Schoolmate.Infrastructure.Data.Migrations.Admissions
{
    [DbContext(typeof(AdmissionDbContext))]
    [Migration("20231211101240_AddApplicationStatus")]
    partial class AddApplicationStatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Schoolmate.Domain.Entities.ApplicantAggregate.Applicant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("Birthday")
                        .HasColumnType("date")
                        .HasColumnName("Birthday");

                    b.Property<string>("Birthplace")
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("Birthplace");

                    b.Property<string>("CivilStatus")
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("CivilStatus");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("FamilyName");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Gender");

                    b.Property<string>("GivenNames")
                        .IsRequired()
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("GivenNames");

                    b.Property<DateTimeOffset>("LastModified")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LearnerRefNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("LearnerRefNum");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("MiddleName");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("Nationality");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(35)")
                        .HasColumnName("Religion");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Identity", 1);

                    b.ToTable("Applicant", (string)null);
                });

            modelBuilder.Entity("Schoolmate.Domain.Entities.ApplicantAggregate.Applicant", b =>
                {
                    b.OwnsMany("Schoolmate.Domain.Entities.ApplicantAggregate.AcademicHistory", "AcademicHistory", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("nvarchar(225)")
                                .HasColumnName("Address");

                            b1.Property<int>("ApplicantId")
                                .HasColumnType("int");

                            b1.Property<string>("Institution")
                                .IsRequired()
                                .HasColumnType("nvarchar(150)")
                                .HasColumnName("Institution");

                            b1.Property<bool>("IsCompleted")
                                .HasColumnType("bit")
                                .HasColumnName("IsCompleted");

                            b1.Property<string>("LastAcademicYearAttended")
                                .HasColumnType("nvarchar(15)")
                                .HasColumnName("LastAcademicYearAttended");

                            b1.Property<string>("ProgramName")
                                .IsRequired()
                                .HasColumnType("nvarchar(75)")
                                .HasColumnName("ProgramName");

                            b1.Property<string>("TelephoneNum")
                                .HasColumnType("nvarchar(15)")
                                .HasColumnName("TelephoneNum");

                            b1.HasKey("Id");

                            b1.HasIndex("ApplicantId");

                            b1.ToTable("AcademicHistory", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ApplicantId");
                        });

                    b.OwnsMany("Schoolmate.Domain.Entities.ApplicantAggregate.Address", "AddressList", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<int>("ApplicantId")
                                .HasColumnType("int");

                            b1.Property<string>("Baranggay")
                                .HasColumnType("nvarchar(35)");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("nvarchar(35)");

                            b1.Property<DateTimeOffset>("Created")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("CreatedBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool>("IsPrimary")
                                .HasColumnType("bit");

                            b1.Property<DateTimeOffset>("LastModified")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("LastModifiedBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Line1")
                                .IsRequired()
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("Line2")
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("Municipality")
                                .IsRequired()
                                .HasColumnType("nvarchar(35)");

                            b1.Property<string>("PostalCode")
                                .HasColumnType("nvarchar(10)");

                            b1.Property<string>("Province")
                                .IsRequired()
                                .HasColumnType("nvarchar(35)");

                            b1.HasKey("Id");

                            b1.HasIndex("ApplicantId");

                            b1.ToTable("Address", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ApplicantId");
                        });

                    b.OwnsMany("Schoolmate.Domain.Entities.ApplicantAggregate.ApplicationStatus", "ApplicationStatuses", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<int>("ApplicantId")
                                .HasColumnType("int");

                            b1.Property<string>("ApplicationStatusType")
                                .IsRequired()
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("ApplicationStatusType");

                            b1.Property<DateTimeOffset>("Created")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("CreatedBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTimeOffset>("LastModified")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("LastModifiedBy")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("Id");

                            b1.HasIndex("ApplicantId");

                            b1.ToTable("ApplicationStatus", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ApplicantId");
                        });

                    b.OwnsMany("Schoolmate.Domain.Entities.ApplicantAggregate.ParentInformation", "ParentList", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<int>("ApplicantId")
                                .HasColumnType("int");

                            b1.Property<string>("EmailAddress")
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("EmployerName")
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("FamilyName")
                                .IsRequired()
                                .HasColumnType("nvarchar(35)");

                            b1.Property<string>("GivenNames")
                                .IsRequired()
                                .HasColumnType("nvarchar(35)");

                            b1.Property<string>("HighestEducationAttainment")
                                .HasColumnType("nvarchar(75)");

                            b1.Property<string>("HomeTelephone")
                                .HasColumnType("nvarchar(15)");

                            b1.Property<bool>("IsDeceased")
                                .HasColumnType("bit");

                            b1.Property<string>("MiddleName")
                                .HasColumnType("nvarchar(35)");

                            b1.Property<string>("MobileTelephone")
                                .HasColumnType("nvarchar(15)");

                            b1.Property<string>("Occupation")
                                .HasColumnType("nvarchar(75)");

                            b1.Property<string>("ParentType")
                                .IsRequired()
                                .HasColumnType("nvarchar(15)");

                            b1.Property<string>("SchoolAttended")
                                .HasColumnType("nvarchar(100)");

                            b1.HasKey("Id");

                            b1.HasIndex("ApplicantId");

                            b1.ToTable("ParentInformation", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ApplicantId");
                        });

                    b.Navigation("AcademicHistory");

                    b.Navigation("AddressList");

                    b.Navigation("ApplicationStatuses");

                    b.Navigation("ParentList");
                });
#pragma warning restore 612, 618
        }
    }
}
